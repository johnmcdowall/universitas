.main-content.grid_4.alpha
  %header.clearfix
    %span.avatar=avatar_for(resource)
    %hgroup
      %h2
        %ul.action-buttons.clearfix.fr
          %li= action_button("#{t('shared.edit')} #{t('shared.profile')}", :edit, :path => edit_profile_path) if current_user && resource == current_user
          - if current_user && resource != current_user
            - if current_user.following?(resource)
              =action_button(t('users.unfollow'), :remove, :path => unfollow_user_path(resource), :method => :delete)
            - else
              =action_button(t('users.follow'), :add, :path => follow_user_path(resource), :method => :post)
        = resource.name
      %h4= resource.location
      .fl
        - ['website', 'twitter', 'facebook'].each do |service|
          - if resource.send("#{service}?")
            = link_to image_tag("auth/signin_#{service}_small.png"), resource.send(service), :target => "_blank"
      - if resource.show_email?
        %h4.fl.spaced-top.spaced-left
          \-
          = resource.email
      %br.clear
      %br.clear
      %h4
        %em=resource.description
  %section
    %h3.center{:style => 'margin-top:0'}="\"#{resource.status}\"" if resource.status.present?
    .filters.center
      - options = {:type => :user, :id => resource.id}
      =button_link_to t('groups.plural'), "javascript:void(0)", :color => 'blue button-green', :'data-url' => groups_path(options)
      =button_link_to t('documents.plural'), "javascript:void(0)", :color => 'blue', :'data-url' => documents_path(options)
      =button_link_to t('users.timeline'), "javascript:void(0)", :color => 'blue', :'data-url' => updates_path(options)
      =button_link_to t('users.following'), "javascript:void(0)", :color => 'blue', :'data-url' => users_path(options.merge(:filter => :following))
      =button_link_to t('users.followers'), "javascript:void(0)", :color => 'blue', :'data-url' => users_path(options.merge(:filter => :followers))
      %br
      %br
      =loading_icon
    #lists= partial('groups/list', {:collection => resource.groups.order('created_at desc')}.merge(options))
    
=render_sidebar